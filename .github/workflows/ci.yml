name: Security CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest tests/

  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety
      - name: Run Bandit (SAST)
        run: |
          bandit -r app/ -c .bandit.yml -f json -o bandit_results.json || echo "Bandit found issues"
      - name: Run Safety (SCA)
        run: |
          safety check -r requirements.txt --output json > safety_results.json || echo "Safety found issues"
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit_results.json
            safety_results.json

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: OWASP Dependency-Check Scan
        uses: dependency-check/actions/scan@v2
        id: dependency-check
        with:
          project: 'app'
          path: '.'
          format: 'HTML,JSON'
          args: >
            --failOnCVSS 7 
            --enableExperimental

      - name: Upload OWASP Dependency-Check report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: dependency-check-report
          path: ${{ steps.dependency-check.outputs.reports-path }}
